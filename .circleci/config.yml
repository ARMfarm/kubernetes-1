linuxkit_pkg_build: &linuxkit_pkg_build
  docker:
    - image: debian:stretch
  steps:
    - run:
        name: Configure $PATH
        command: echo 'export PATH=/workspace/bin:$PATH' >> $BASH_ENV
    - run:
        name: Install packages
        # ca-certificates are needed for attach_workspace (and git over https)
        command: apt-get update && apt-get install -y ca-certificates git openssh-client
    - attach_workspace:
        at: /workspace
    - checkout
    - setup_remote_docker:
        version: 17.06.1-ce
    - run:
        name: Docker version
        command: |
          docker version
    - run:
        name: Building package
        command: |
          PKG=${CIRCLE_JOB#pkg-}
          mkdir /workspace/packages
          linuxkit pkg build pkg/$PKG
          linuxkit pkg show-tag pkg/$PKG > /workspace/packages/$PKG.tag
          echo
          docker image ls --all
          docker image save -o /workspace/packages/$PKG.tar linuxkit/$PKG
    - persist_to_workspace:
        root: /workspace
        paths: packages

image_cache_build: &image_cache_build
  docker:
    - image: debian:stretch
  steps:
    - run:
        name: Configure $PATH
        command: echo 'export PATH=/workspace/bin:$PATH' >> $BASH_ENV
    - run:
        name: Install packages
        # ca-certificates are needed for attach_workspace (and git over https)
        command: apt-get update && apt-get install -y ca-certificates git make openssh-client
    - attach_workspace:
        at: /workspace
    - checkout
    - setup_remote_docker:
        version: 17.06.1-ce
    - run:
        name: Docker version
        command: |
          docker version
    - run:
        name: Building package
        command: |
          CACHE=${CIRCLE_JOB#pkg-image-cache-}
          PKG=kubernetes-docker-image-cache-$CACHE
          mkdir /workspace/packages
          make --no-print-directory -C pkg/image-cache build-$CACHE
          make --no-print-directory -C pkg/image-cache show-tag-$CACHE > /workspace/packages/$PKG.tag
          echo
          docker image ls --all
          docker image save -o /workspace/packages/$PKG.tar linuxkit/$PKG
    - persist_to_workspace:
        root: /workspace
        paths: packages

version: 2
jobs:
  dependencies:
    docker:
      - image: debian:stretch
    steps:
      - run:
          name: Create workspace
          command: mkdir -p /workspace/bin
      - run:
          name: Install packages
          command: apt-get update && apt-get install -y ca-certificates curl
      - run:
          name: Fetch binaries
          command: |
            curl -fsSL -o /tmp/docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-17.06.2-ce.tgz
            tar xfO /tmp/docker.tgz docker/docker > /workspace/bin/docker
            curl -fsSL -o /workspace/bin/linuxkit https://206-46932243-gh.circle-artifacts.com/0/linuxkit-linux-amd64
            curl -fsSL -o /workspace/bin/manifest-tool https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-amd64
            curl -fsSL -o /workspace/bin/notary https://github.com/theupdateframework/notary/releases/download/v0.4.3/notary-Linux-amd64

            echo "Downloaded:"
            sha256sum /workspace/bin/*
            echo

            echo "Checking checksums"
            sha256sum -c <<EOF
            6af40e74b2dbb2927882acab52d50bfc72551779d541957fc70b6adc325ee5ef  /workspace/bin/docker
            4561e6a19d126d5a4827d7cfff2c6fae2634d9564910df7ef9ff1e89c7e1c4d4  /workspace/bin/linuxkit
            e4ca2ef0015a4be8597d31d9e3e70d88da33924ae72b0999e9f3b79304d4710d  /workspace/bin/manifest-tool
            06cd02c4c2e7a3b1ad9899b03b3d4dde5392d964c675247d32f604a24661f839  /workspace/bin/notary
            EOF
      - run:
          name: Versions
          command: |
             chmod +x /workspace/bin/docker # docker version deferred until daemon configured in relevant jobs
             chmod +x /workspace/bin/linuxkit && /workspace/bin/linuxkit version
             chmod +x /workspace/bin/manifest-tool && /workspace/bin/manifest-tool --version
             chmod +x /workspace/bin/notary && /workspace/bin/notary version
      - persist_to_workspace:
          root: /workspace
          paths: bin

  check-hashes:
    docker:
      - image: debian:stretch
    steps:
      - run:
          name: Configure $PATH
          command: echo 'export PATH=/workspace/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install packages
          # ca-certificates are needed for attach_workspace (and git over https)
          command: apt-get update && apt-get install -y ca-certificates git make openssh-client
      - attach_workspace:
          at: /workspace
      - checkout
      - run:
          name: Check hashes
          command: |
            make update-hashes
            if ! git diff --exit-code ; then
                echo ""
                echo "*** Hashes are not up to date."
                exit 1
            fi

  pkg-cri-containerd:
    <<: *linuxkit_pkg_build
  pkg-kubelet:
    <<: *linuxkit_pkg_build

  pkg-image-cache-common:
    <<: *image_cache_build
  pkg-image-cache-control-plane:
    <<: *image_cache_build

  pkgs:
    docker:
      - image: debian:stretch
    steps:
      - run:
          name: Configure $PATH
          command: echo 'export PATH=/workspace/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install packages
          # ca-certificates are needed for attach_workspace (and git over https)
          command: apt-get update && apt-get install -y ca-certificates
      - attach_workspace:
          at: /workspace
      - checkout
      - setup_remote_docker:
          version: 17.06.1-ce
      - run:
          name: Docker version
          command: |
            docker version
      - run:
          name: Import packages
          command: |
            for pkg in /workspace/packages/*.tar ; do
               docker image load --input $pkg
            done
            docker image ls --all
workflows:
  version: 2
  build:
    jobs:
      - dependencies
      - check-hashes:
          requires:
            - dependencies

      - pkg-kubelet:
          requires:
            - dependencies
      - pkg-cri-containerd:
          requires:
            - dependencies
      - pkg-image-cache-common:
          requires:
            - dependencies
      - pkg-image-cache-control-plane:
          requires:
            - dependencies
      - pkgs:
          requires:
            - pkg-kubelet
            - pkg-cri-containerd
            - pkg-image-cache-common
            - pkg-image-cache-control-plane
